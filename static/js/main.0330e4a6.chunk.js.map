{"version":3,"sources":["logic/calc.js","components/common/LanguageSelector.js","components/common/InfoCircle.js","components/ResultSection.js","pages/Page.js","components/common/Loader.js","App.js","i18n.js","index.js"],"names":["calculateNumberOfVacationDaysNextPeriod","startingDate","numberOfPaidVacationDays","numberOfVacationNextPeriod","firstDayOfEarningYear","Date","getFullYear","getMonth","startingDateDayNumberOfEarningYear","Math","ceil","numberOfDaysOfEarningYear","daysOfAYear","numberOfDaysWorkedThisEarningYear","numberOfVacationDays","calculateNumberOfVacationDays","isLeapYear","year","calculateDayOfYear","LanguageSelector","i18n","useTranslation","changeLanguage","lng","className","style","cursor","onClick","square","width","height","InfoCircle","header","subHeader","description","icon","Segment","circular","Header","as","Icon","name","Subheader","textAlign","ResultSection","healthCareSubThisYear","vacationDaysNextPeriod","t","startYearOfFirstVacationYear","firstDayOfVacationYear","getYearOfFirstVacationPeriod","endYearOfFirstVacationYear","Grid","stackable","columns","Column","moment","format","startYear","endYear","Page","useState","setStartingDate","setNumberOfPaidVacationDays","setHealthCareSubThisYear","setVacationDaysNextPeriod","message","setMessage","setVacationDays","Container","text","margin","Input","type","labelPosition","size","label","basic","content","onChange","event","target","value","date","dayOfYear","workingDaysThisYear","round","calculateHealthCareSub","min","placeholder","e","Divider","renderMessage","Loader","App","fallback","resources","en","translation","translationEN","sv","translationSE","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","lngWhitelist","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0330e4a6.chunk.js","sourcesContent":["const healthCareSub = 5000;\r\n\r\nexport const getYearOfFirstVacationPeriod = function (startingDate) {\r\n  let firstDayOfVacationYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfVacationYear = new Date(startingDate.getFullYear() + 1, 3, 1);\r\n  }\r\n  return firstDayOfVacationYear.getFullYear();\r\n};\r\n\r\n/*\r\nAntalet betalda semesterdagar beräknas som: \r\nAntalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n(avrundas alltid uppåt till hela semesterdagar)\r\n*/\r\nexport const calculateNumberOfVacationDays = function (\r\n  startingDate,\r\n  firstDayOfEarningYear,\r\n  numberOfPaidVacationDays\r\n) {\r\n  const oneDayWorthOfMilliseconds = 86400000;\r\n  const startingDateDayNumberOfEarningYear = Math.ceil(\r\n    (startingDate - firstDayOfEarningYear) / oneDayWorthOfMilliseconds\r\n  );\r\n  const numberOfDaysOfEarningYear = daysOfAYear(\r\n    firstDayOfEarningYear.getFullYear() + 1\r\n  );\r\n  const numberOfDaysWorkedThisEarningYear =\r\n    numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear;\r\n  const numberOfVacationDays = Math.ceil(\r\n    (numberOfDaysWorkedThisEarningYear * numberOfPaidVacationDays) /\r\n      numberOfDaysOfEarningYear\r\n  );\r\n  if (numberOfVacationDays <= 0) {\r\n    return 0;\r\n  }\r\n  return numberOfVacationDays;\r\n};\r\n\r\nexport const calculateHealthCareSub = function (startingDate) {\r\n  const dayOfYear = calculateDayOfYear(startingDate);\r\n  const workingDaysThisYear =\r\n    daysOfAYear(startingDate.getFullYear()) - dayOfYear + 1;\r\n  const healthCareSubThisYear = Math.round(\r\n    healthCareSub *\r\n      (workingDaysThisYear / daysOfAYear(startingDate.getFullYear()))\r\n  );\r\n  return healthCareSubThisYear;\r\n};\r\n\r\nexport const calculateNumberOfVacationDaysNextPeriod = function (\r\n  startingDate,\r\n  numberOfPaidVacationDays\r\n) {\r\n  var numberOfVacationNextPeriod;\r\n  //the first day of the earning year is april 1st\r\n  let firstDayOfEarningYear = new Date(startingDate.getFullYear() - 1, 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfEarningYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  }\r\n  /*\r\n    Antalet betalda semesterdagar beräknas som: \r\n    Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n    (avrundas alltid uppåt till hela semesterdagar)\r\n  */\r\n  numberOfVacationNextPeriod = calculateNumberOfVacationDays(\r\n    startingDate,\r\n    firstDayOfEarningYear,\r\n    numberOfPaidVacationDays\r\n  );\r\n  return numberOfVacationNextPeriod;\r\n};\r\n\r\n/*\r\nHelper methods\r\n*/\r\n\r\nfunction isLeapYear(year) {\r\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n}\r\n\r\nconst daysOfAYear = function (year) {\r\n  return isLeapYear(year) ? 366 : 365;\r\n};\r\n\r\nconst calculateDayOfYear = function (startingDate) {\r\n  return Math.ceil(\r\n    (startingDate - new Date(startingDate.getFullYear(), 0, 1)) / 86400000\r\n  );\r\n};\r\n\r\nexport const exportedForTesting = {\r\n  daysOfAYear,\r\n  isLeapYear,\r\n  calculateDayOfYear,\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// loading component for suspense fallback\r\nfunction LanguageSelector() {\r\n  const { i18n } = useTranslation();\r\n\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  return (\r\n    <div>\r\n      <i\r\n        className=\"se flag\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => changeLanguage(\"sv\")}\r\n      ></i>\r\n      <i\r\n        className=\"gb flag\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => changeLanguage(\"en\")}\r\n      ></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import React from \"react\";\r\nimport { Header, Segment, Icon } from \"semantic-ui-react\";\r\n\r\nconst square = { width: 200, height: 200 };\r\n\r\nfunction InfoCircle({ header, subHeader, description, icon }) {\r\n  return (\r\n    <>\r\n      <Segment circular style={square}>\r\n        <Header as=\"h3\" icon>\r\n          <Icon name={icon} />\r\n          {header}\r\n          <Header.Subheader>{subHeader}</Header.Subheader>\r\n        </Header>\r\n      </Segment>\r\n      <Header as=\"h4\" textAlign=\"center\">\r\n        {description}\r\n      </Header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoCircle;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport InfoCircle from \"./common/InfoCircle\";\r\n\r\nimport { getYearOfFirstVacationPeriod } from \"../logic/calc\";\r\n\r\nfunction ResultSection({\r\n  startingDate,\r\n  healthCareSubThisYear,\r\n  vacationDaysNextPeriod,\r\n}) {\r\n  const { t } = useTranslation();\r\n  const startYearOfFirstVacationYear =\r\n    getYearOfFirstVacationPeriod(startingDate);\r\n  const endYearOfFirstVacationYear = startYearOfFirstVacationYear + 1;\r\n\r\n  return (\r\n    <Grid stackable columns={3}>\r\n      <Grid.Column>\r\n        <InfoCircle\r\n          header={t(\"start-date\")}\r\n          subHeader={moment(startingDate).format(\"YYYY-MM-DD\")}\r\n          description={t(\"start-date-sub-title\")}\r\n          icon=\"angle right\"\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <InfoCircle\r\n          header={t(\"wellness-allowance\")}\r\n          subHeader={healthCareSubThisYear}\r\n          description={\r\n            t(\"wellness-allowance\") + \" \" + moment(startingDate).format(\"YYYY\")\r\n          }\r\n          icon=\"heart\"\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <InfoCircle\r\n          header={t(\"vacation.vacation-days\")}\r\n          subHeader={vacationDaysNextPeriod}\r\n          description={t(\"vacation.sub-info\", {\r\n            startYear: startYearOfFirstVacationYear,\r\n            endYear: endYearOfFirstVacationYear,\r\n          })}\r\n          icon=\"sun\"\r\n        />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ResultSection;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Header, Input, Divider } from \"semantic-ui-react\";\r\n\r\nimport {\r\n  calculateHealthCareSub,\r\n  calculateNumberOfVacationDaysNextPeriod,\r\n} from \"../logic/calc\";\r\nimport LanguageSelector from \"../components/common/LanguageSelector\";\r\nimport ResultSection from \"../components/ResultSection\";\r\n\r\nfunction Page() {\r\n  const { t } = useTranslation();\r\n\r\n  const [startingDate, setStartingDate] = useState(null);\r\n  const [numberOfPaidVacationDays, setNumberOfPaidVacationDays] = useState(25);\r\n  const [healthCareSubThisYear, setHealthCareSubThisYear] = useState(0);\r\n  const [vacationDaysNextPeriod, setVacationDaysNextPeriod] = useState(0);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const setVacationDays = (startingDate) => {\r\n    const vacationDaysNextPeriod = calculateNumberOfVacationDaysNextPeriod(\r\n      startingDate,\r\n      numberOfPaidVacationDays\r\n    );\r\n    setVacationDaysNextPeriod(vacationDaysNextPeriod);\r\n  };\r\n\r\n  const onNumberOfPaidVacationDaysChange = (e) => {\r\n    setNumberOfPaidVacationDays(e.target.value);\r\n    if (startingDate) {\r\n      setVacationDays(startingDate);\r\n    }\r\n  };\r\n\r\n  const onDateChange = (event) => {\r\n    if (!event.target.value) return;\r\n    const date = new Date(event.target.value);\r\n    const healthCareSubThisYear = calculateHealthCareSub(date);\r\n    setHealthCareSubThisYear(healthCareSubThisYear);\r\n    setStartingDate(date);\r\n    setVacationDays(date);\r\n    setMessage(t(\"message.informationOnFuture\"));\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    if (message) {\r\n      return <p className=\"ui info message\">{message}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container text style={{ margin: 20 }}>\r\n      <LanguageSelector />\r\n      <Header as=\"h1\">{t(\"title\")}</Header>\r\n      <p>{t(\"sub-title\")}</p>\r\n      <Header as=\"h5\">{t(\"select-star-date\")}</Header>\r\n      <Input\r\n        type=\"date\"\r\n        labelPosition=\"right\"\r\n        size=\"mini\"\r\n        label={{ basic: true, content: t(\"date\") }}\r\n        onChange={onDateChange}\r\n      />\r\n      <Header as=\"h5\">{t(\"vacation.number-of-vacation-days\")}</Header>\r\n      <Input\r\n        label={{ basic: true, content: t(\"days\") }}\r\n        labelPosition=\"right\"\r\n        type=\"number\"\r\n        size=\"mini\"\r\n        value={numberOfPaidVacationDays}\r\n        name=\"quantity\"\r\n        min=\"25\"\r\n        placeholder={numberOfPaidVacationDays}\r\n        onChange={onNumberOfPaidVacationDaysChange}\r\n      />\r\n      <Divider />\r\n      {startingDate ? (\r\n        <ResultSection\r\n          startingDate={startingDate}\r\n          healthCareSubThisYear={healthCareSubThisYear}\r\n          vacationDaysNextPeriod={vacationDaysNextPeriod}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {renderMessage()}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","// loading component for suspense fallback\r\nconst Loader = () => (\r\n    <div className=\"App\">\r\n      <div>loading...</div>\r\n    </div>\r\n  );\r\n\r\nexport default Loader;","import React, { Suspense } from \"react\";\r\n\r\nimport Page from \"./pages/Page\";\r\nimport Loader from \"./components/common/Loader\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Page />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from \"./lang/translationEN.json\";\r\nimport translationSE from \"./lang/translationSE.json\";\r\n\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  sv: {\r\n    translation: translationSE\r\n  },\r\n  \"sv-SE\": {\r\n    translation: translationSE\r\n  }\r\n};\r\n\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    resources,\r\n    debug: true,\r\n    lngWhitelist: ['se', 'en'],\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./i18n\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}