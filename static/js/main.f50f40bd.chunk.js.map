{"version":3,"sources":["components/App.js","index.js"],"names":["App","props","state","startDate","dayOfYear","healtCareSubThisYear","vacationDaysNextPeriod","vacationDaysThisPeriod","message","onDateChange","bind","defaultNumberOfPaidVacationDays","year","this","isLeapYear","date","Math","ceil","Date","getFullYear","calculateDayOfYear","setState","workingDaysThisYear","daysOfAYear","round","startingDate","firstDayOfEarningYear","startingDateDayNumberOfEarningYear","numberOfDaysOfEarningYear","numberOfDaysWorkedThisEarningYear","numberOfVacationDays","getMonth","calculateNumberOfVacationDays","calculateHealthCareSub","calculateNumberOfVacationDaysNextPeriod","calculateNumberOfVacationDaysThisPeriod","className","getYearOfNextVacationPeriod","firstDayOfVacationYear","getYearOfThisVacationPeriod","style","paddingTop","onChange","value","renderMessage","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f50f40bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst healtCareSub = 5000;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: null,\r\n      dayOfYear: null,\r\n      healtCareSubThisYear: 0,\r\n      vacationDaysNextPeriod: 0,\r\n      vacationDaysThisPeriod: 0,\r\n      message: null\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n    this.defaultNumberOfPaidVacationDays = 25;\r\n  }\r\n\r\n  isLeapYear(year) {\r\n    return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n  }\r\n\r\n  daysOfAYear(year) {\r\n    return this.isLeapYear(year) ? 366 : 365;\r\n  }\r\n\r\n  calculateDayOfYear(date) {\r\n    return (Math.ceil((date - new Date(date.getFullYear(), 0, 1)) / 86400000))\r\n  }\r\n\r\n  calculateHealthCareSub(date) {\r\n    const dayOfYear = this.calculateDayOfYear(date);\r\n    this.setState({ dayOfYear: dayOfYear })\r\n    const workingDaysThisYear = this.daysOfAYear(date) - dayOfYear;\r\n    this.setState({\r\n      healtCareSubThisYear: Math.round(healtCareSub * (workingDaysThisYear / this.daysOfAYear(date))),\r\n      message: 'Baserat på antal dagar du kommer att jobba i år.'\r\n    })\r\n  }\r\n\r\n  calculateNumberOfVacationDays(startingDate, firstDayOfEarningYear) {\r\n    /*\r\n      Antalet betalda semesterdagar beräknas som: \r\n      Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n      (avrundas alltid uppåt till hela semesterdagar)\r\n    */\r\n    const startingDateDayNumberOfEarningYear = Math.ceil((startingDate - firstDayOfEarningYear) / 86400000);\r\n    const numberOfDaysOfEarningYear = this.daysOfAYear(firstDayOfEarningYear.getFullYear() + 1);\r\n    const numberOfDaysWorkedThisEarningYear = numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear + 1\r\n    const numberOfVacationDays = Math.ceil(numberOfDaysWorkedThisEarningYear * this.defaultNumberOfPaidVacationDays / numberOfDaysOfEarningYear)\r\n    if (numberOfVacationDays <= 0) {\r\n      return 0;\r\n    }\r\n    return numberOfVacationDays;\r\n  }\r\n\r\n  calculateNumberOfVacationDaysNextPeriod(startingDate) {\r\n    //the first day of the earning year is april 1st\r\n    let firstDayOfEarningYear = new Date(new Date().getFullYear() - 1, 3, 1)\r\n    if (new Date().getMonth() >= 3) {\r\n      firstDayOfEarningYear = new Date(new Date().getFullYear(), 3, 1)\r\n    }\r\n    /*\r\n    If having started before the first day of the current earning year, we can assume that\r\n    the employee will have full vacation\r\n    */\r\n    if (startingDate < firstDayOfEarningYear) {\r\n      this.setState({\r\n        vacationDaysNextPeriod: 25\r\n      })\r\n      return\r\n    }\r\n    /*\r\n      Antalet betalda semesterdagar beräknas som: \r\n      Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n      (avrundas alltid uppåt till hela semesterdagar)\r\n    */\r\n    this.setState({\r\n      vacationDaysNextPeriod: this.calculateNumberOfVacationDays(startingDate, firstDayOfEarningYear)\r\n    })\r\n  }\r\n  calculateNumberOfVacationDaysThisPeriod(startingDate) {\r\n    //the first day of the earning year is april 1st\r\n    let firstDayOfEarningYear = new Date(new Date().getFullYear() - 2, 3, 1)\r\n    if (new Date().getMonth() >= 3) {\r\n      firstDayOfEarningYear = new Date(new Date().getFullYear() - 1, 3, 1)\r\n    }\r\n    /*\r\n    If having started before the first day of the current earning year, we can assume that\r\n    the employee will have full vacation\r\n    */\r\n    if (startingDate < firstDayOfEarningYear) {\r\n      this.setState({\r\n        vacationDaysThisPeriod: 25\r\n      })\r\n      return\r\n    }\r\n    /*\r\n      Antalet betalda semesterdagar beräknas som: \r\n      Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n      (avrundas alltid uppåt till hela semesterdagar)\r\n    */\r\n    this.setState({\r\n      vacationDaysThisPeriod: this.calculateNumberOfVacationDays(startingDate, firstDayOfEarningYear)\r\n    })\r\n  }\r\n\r\n  onDateChange(date) {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n    if (date) {\r\n      if (date.getFullYear() < new Date().getFullYear()) {\r\n        this.setState({\r\n          healtCareSubThisYear: 5000,\r\n          message: 'Eftersom du började förra året så har du fullt friskvårdsbidrag i år.'\r\n        })\r\n      } else {\r\n        this.calculateHealthCareSub(date);\r\n        this.setState({\r\n          message: null\r\n        })\r\n      }\r\n\r\n\r\n      this.calculateNumberOfVacationDaysNextPeriod(date)\r\n      this.calculateNumberOfVacationDaysThisPeriod(date)\r\n    }\r\n  }\r\n\r\n  renderMessage() {\r\n    if (this.state.message) {\r\n      return (\r\n        <h5 className=\"ui info message\">\r\n          {this.state.message}\r\n        </h5>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    function getYearOfNextVacationPeriod() {\r\n      let firstDayOfVacationYear = new Date(new Date().getFullYear(), 3, 1)\r\n      if (new Date().getMonth() >= 3) {\r\n        firstDayOfVacationYear = new Date(new Date().getFullYear() + 1, 3, 1)\r\n      }\r\n      return firstDayOfVacationYear.getFullYear();\r\n    }\r\n\r\n    function getYearOfThisVacationPeriod() {\r\n      let firstDayOfVacationYear = new Date(new Date().getFullYear() - 1, 3, 1)\r\n      if (new Date().getMonth() >= 3) {\r\n        firstDayOfVacationYear = new Date(new Date().getFullYear(), 3, 1)\r\n      }\r\n      return firstDayOfVacationYear.getFullYear();\r\n    }\r\n\r\n    return (\r\n      <div className=\"ui container\">\r\n        <h1 className=\"ui header\">Friskvårdsbidragsuträknare</h1>\r\n        <div className=\"sub header\">Välj ett startdatum för att räkna ut hur mycket Friskvårdsbidrag du är berättigad till i år.</div>\r\n        <div style={{ paddingTop: '30px' }}>\r\n          <DatePicker\r\n            onChange={this.onDateChange}\r\n            value={this.state.startDate}\r\n          />\r\n        </div>\r\n        <h2 className=\"ui icon header\">\r\n          <div className=\"content\">\r\n            Friskvårdsbidrag: {this.state.healtCareSubThisYear}\r\n          </div>\r\n          <div className=\"content\">\r\n            Semester period 1/4/{getYearOfThisVacationPeriod()}-31/3/{getYearOfThisVacationPeriod() + 1}: {this.state.vacationDaysThisPeriod}\r\n          </div>\r\n          <div className=\"content\">\r\n            Semester period 1/4/{getYearOfNextVacationPeriod()}-31/3/{getYearOfNextVacationPeriod() + 1}: {this.state.vacationDaysNextPeriod}\r\n          </div>\r\n        </h2>\r\n        {this.renderMessage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector('#root'));"],"sourceRoot":""}