{"version":3,"sources":["logic/calc.js","components/App.js","index.js"],"names":["calculateHealthCareSub","startingDate","dayOfYear","calculateDayOfYear","workingDaysThisYear","daysOfAYear","getFullYear","Math","round","calculateNumberOfVacationDaysNextPeriod","numberOfPaidVacationDays","numberOfVacationNextPeriod","firstDayOfEarningYear","Date","getMonth","startingDateDayNumberOfEarningYear","ceil","numberOfDaysOfEarningYear","numberOfDaysWorkedThisEarningYear","numberOfVacationDays","calculateNumberOfVacationDays","isLeapYear","year","square","width","height","App","props","state","healtCareSubThisYear","vacationDaysNextPeriod","message","onDateChange","bind","onNumberOfPaidVacationDaysChange","this","setState","e","target","value","setVactationDays","setHealthCareSub","setMessage","className","yearOfFirstVacationYear","firstDayOfVacationYear","getYearOfFirstVacationPeriod","Container","text","style","margin","Header","as","onChange","Input","label","basic","content","labelPosition","type","size","name","min","placeholder","Divider","moment","format","renderVacationDaysText","renderMessage","Grid","container","columns","Column","Segment","circular","Subheader","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.61d777f2.chunk.js","sourcesContent":["const healtCareSub = 5000;\r\n\r\nexport const getYearOfFirstVacationPeriod = function (startingDate) {\r\n  let firstDayOfVacationYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfVacationYear = new Date(startingDate.getFullYear() + 1, 3, 1);\r\n  }\r\n  return firstDayOfVacationYear.getFullYear();\r\n};\r\n\r\n/*\r\nAntalet betalda semesterdagar beräknas som: \r\nAntalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n(avrundas alltid uppåt till hela semesterdagar)\r\n*/\r\nexport const calculateNumberOfVacationDays = function (\r\n  startingDate,\r\n  firstDayOfEarningYear,\r\n  numberOfPaidVacationDays\r\n) {\r\n  const startingDateDayNumberOfEarningYear = Math.ceil(\r\n    (startingDate - firstDayOfEarningYear) / 86400000\r\n  );\r\n  const numberOfDaysOfEarningYear = daysOfAYear(\r\n    firstDayOfEarningYear.getFullYear() + 1\r\n  );\r\n  const numberOfDaysWorkedThisEarningYear =\r\n    numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear;\r\n  const numberOfVacationDays = Math.ceil(\r\n    (numberOfDaysWorkedThisEarningYear * numberOfPaidVacationDays) /\r\n      numberOfDaysOfEarningYear\r\n  );\r\n  if (numberOfVacationDays <= 0) {\r\n    return 0;\r\n  }\r\n  return numberOfVacationDays;\r\n};\r\n\r\nexport const calculateHealthCareSub = function (startingDate) {\r\n  const dayOfYear = calculateDayOfYear(startingDate);\r\n  const workingDaysThisYear =\r\n    daysOfAYear(startingDate.getFullYear()) - dayOfYear + 1;\r\n  const healtCareSubThisYear = Math.round(\r\n    healtCareSub *\r\n      (workingDaysThisYear / daysOfAYear(startingDate.getFullYear()))\r\n  );\r\n  return healtCareSubThisYear;\r\n};\r\n\r\nexport const calculateNumberOfVacationDaysNextPeriod = function (\r\n  startingDate,\r\n  numberOfPaidVacationDays\r\n) {\r\n  var numberOfVacationNextPeriod;\r\n  //the first day of the earning year is april 1st\r\n  let firstDayOfEarningYear = new Date(startingDate.getFullYear() - 1, 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfEarningYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  }\r\n  /*\r\n    Antalet betalda semesterdagar beräknas som: \r\n    Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n    (avrundas alltid uppåt till hela semesterdagar)\r\n  */\r\n  numberOfVacationNextPeriod = calculateNumberOfVacationDays(\r\n    startingDate,\r\n    firstDayOfEarningYear,\r\n    numberOfPaidVacationDays\r\n  );\r\n  return numberOfVacationNextPeriod;\r\n};\r\n\r\n/*\r\nHelper methods\r\n*/\r\n\r\nfunction isLeapYear(year) {\r\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n}\r\n\r\nconst daysOfAYear = function (year) {\r\n  return isLeapYear(year) ? 366 : 365;\r\n};\r\n\r\nconst calculateDayOfYear = function (startingDate) {\r\n  return Math.ceil(\r\n    (startingDate - new Date(startingDate.getFullYear(), 0, 1)) / 86400000\r\n  );\r\n};\r\n\r\nexport const exportedForTesting = {\r\n  daysOfAYear,\r\n  isLeapYear,\r\n  calculateDayOfYear,\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Input,\r\n  Divider,\r\n  Icon,\r\n  Grid,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {\r\n  getYearOfFirstVacationPeriod,\r\n  calculateHealthCareSub,\r\n  calculateNumberOfVacationDaysNextPeriod,\r\n} from \"../logic/calc\";\r\n\r\nconst square = { width: 175, height: 175 };\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startingDate: null,\r\n      numberOfPaidVacationDays: 25,\r\n      healtCareSubThisYear: 0,\r\n      vacationDaysNextPeriod: 0,\r\n      message: null,\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n    this.onNumberOfPaidVacationDaysChange =\r\n      this.onNumberOfPaidVacationDaysChange.bind(this);\r\n  }\r\n\r\n  setHealthCareSub(startingDate) {\r\n    this.setState({\r\n      healtCareSubThisYear: calculateHealthCareSub(startingDate),\r\n    });\r\n  }\r\n\r\n  setVactationDays(startingDate) {\r\n    this.setState({\r\n      vacationDaysNextPeriod: calculateNumberOfVacationDaysNextPeriod(\r\n        startingDate,\r\n        this.state.numberOfPaidVacationDays\r\n      ),\r\n    });\r\n  }\r\n\r\n  setMessage(message) {\r\n    this.setState({\r\n      message: message,\r\n    });\r\n  }\r\n\r\n  onNumberOfPaidVacationDaysChange(e) {\r\n    this.setState({\r\n      numberOfPaidVacationDays: e.target.value,\r\n    });\r\n    if (this.state.startingDate) {\r\n      this.setVactationDays(this.state.startingDate);\r\n    }\r\n  }\r\n\r\n  onDateChange(startingDate) {\r\n    if (!startingDate) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      startingDate: startingDate,\r\n    });\r\n    this.setHealthCareSub(startingDate);\r\n    this.setVactationDays(startingDate);\r\n    this.setMessage(\r\n      `Framtida år / perioder kommer att vara berättigade fullt bidrag och fullt antal semesterdagar.`\r\n    );\r\n  }\r\n\r\n  renderMessage() {\r\n    if (this.state.message) {\r\n      return <p className=\"ui info message\">{this.state.message}</p>;\r\n    }\r\n  }\r\n\r\n  renderVacationDaysText() {\r\n    if (this.state.startingDate) {\r\n      const yearOfFirstVacationYear = getYearOfFirstVacationPeriod(\r\n        this.state.startingDate\r\n      );\r\n      return (\r\n        <div>\r\n          Intjänade semesterdagar period 1/4/{yearOfFirstVacationYear} - 31/3/\r\n          {yearOfFirstVacationYear + 1}: {this.state.vacationDaysNextPeriod}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container text style={{ margin: 20 }}>\r\n        <Header as=\"h1\">Friskvårdsbidragsuträknare</Header>\r\n        <p>\r\n          Applikationen räknar ut hur mycket semester du hinner jobba in till\r\n          nästa semesterår, samt hur mycket Friskvårdsbidrag du har rätt till\r\n          under kalenderåret du blev anställd.\r\n        </p>\r\n        <Header as=\"h5\">Välj startdatum</Header>\r\n        <DatePicker\r\n          onChange={this.onDateChange}\r\n          value={this.state.startingDate}\r\n        />\r\n        <Header as=\"h5\">Antal semesterdagar</Header>\r\n        <Input\r\n          label={{ basic: true, content: \"Dagar\" }}\r\n          labelPosition=\"right\"\r\n          type=\"number\"\r\n          size=\"mini\"\r\n          value={this.state.numberOfPaidVacationDays}\r\n          name=\"quantity\"\r\n          min=\"25\"\r\n          placeholder={this.state.numberOfPaidVacationDays}\r\n          onChange={this.onNumberOfPaidVacationDaysChange}\r\n        />\r\n        <Divider />\r\n        <div>\r\n          Startdatum:{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY-MM-DD\")\r\n            : \"\"}\r\n        </div>\r\n        <div>\r\n          Friskvårdsbidrag{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY\")\r\n            : \"\"}\r\n          : {this.state.healtCareSubThisYear}\r\n        </div>\r\n        {this.renderVacationDaysText()}\r\n        {this.renderMessage()}\r\n\r\n        <Grid container columns={3}>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h2\">\r\n                Startdatum!\r\n                <Header.Subheader>\r\n                  {\" \"}\r\n                  {this.state.startingDate\r\n                    ? moment(this.state.startingDate).format(\"YYYY-MM-DD\")\r\n                    : \"\"}\r\n                </Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h2\">\r\n                Friskvårdsbidrag\r\n                <Header.Subheader>\r\n                  {\" \"}\r\n                  {this.state.startingDate\r\n                    ? moment(this.state.startingDate).format(\"YYYY\")\r\n                    : \"\"}\r\n                  : {this.state.healtCareSubThisYear}\r\n                </Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h2\">\r\n                Semesterdagar\r\n                <Header.Subheader>\r\n                  {\" \"}\r\n                  {this.renderVacationDaysText()}\r\n                </Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector('#root'));"],"sourceRoot":""}