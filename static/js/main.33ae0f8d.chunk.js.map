{"version":3,"sources":["logic/calc.js","components/Page.js","components/Loader.js","components/App.js","i18n.js","index.js"],"names":["calculateNumberOfVacationDaysNextPeriod","startingDate","numberOfPaidVacationDays","numberOfVacationNextPeriod","firstDayOfEarningYear","Date","getFullYear","getMonth","startingDateDayNumberOfEarningYear","Math","ceil","numberOfDaysOfEarningYear","daysOfAYear","numberOfDaysWorkedThisEarningYear","numberOfVacationDays","calculateNumberOfVacationDays","isLeapYear","year","calculateDayOfYear","square","width","height","Page","useTranslation","t","i18n","changeLanguage","lng","useState","setStartingDate","setNumberOfPaidVacationDays","healtCareSubThisYear","setHealtCareSubThisYear","vacationDaysNextPeriod","setVacationDaysNextPeriod","message","setMessage","setHealthCareSub","dayOfYear","workingDaysThisYear","round","calculateHealthCareSub","setVactationDays","renderVacationDaysText","startYearOfFirstVacationYear","firstDayOfVacationYear","getYearOfFirstVacationPeriod","endYearOfFirstVacationYear","Header","as","textAlign","startYear","endYear","Container","text","style","margin","type","onClick","onChange","value","Input","label","basic","content","labelPosition","size","name","min","placeholder","e","target","Divider","Grid","stackable","columns","Column","Segment","circular","icon","Icon","Subheader","moment","format","renderInfoBlobs","className","renderMessage","Loader","App","fallback","resources","en","translation","translationEN","sv","translationSE","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","lngWhitelist","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33ae0f8d.chunk.js","sourcesContent":["const healtCareSub = 5000;\r\n\r\nexport const getYearOfFirstVacationPeriod = function (startingDate) {\r\n  let firstDayOfVacationYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfVacationYear = new Date(startingDate.getFullYear() + 1, 3, 1);\r\n  }\r\n  return firstDayOfVacationYear.getFullYear();\r\n};\r\n\r\n/*\r\nAntalet betalda semesterdagar beräknas som: \r\nAntalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n(avrundas alltid uppåt till hela semesterdagar)\r\n*/\r\nexport const calculateNumberOfVacationDays = function (\r\n  startingDate,\r\n  firstDayOfEarningYear,\r\n  numberOfPaidVacationDays\r\n) {\r\n  const startingDateDayNumberOfEarningYear = Math.ceil(\r\n    (startingDate - firstDayOfEarningYear) / 86400000\r\n  );\r\n  const numberOfDaysOfEarningYear = daysOfAYear(\r\n    firstDayOfEarningYear.getFullYear() + 1\r\n  );\r\n  const numberOfDaysWorkedThisEarningYear =\r\n    numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear;\r\n  const numberOfVacationDays = Math.ceil(\r\n    (numberOfDaysWorkedThisEarningYear * numberOfPaidVacationDays) /\r\n      numberOfDaysOfEarningYear\r\n  );\r\n  if (numberOfVacationDays <= 0) {\r\n    return 0;\r\n  }\r\n  return numberOfVacationDays;\r\n};\r\n\r\nexport const calculateHealthCareSub = function (startingDate) {\r\n  const dayOfYear = calculateDayOfYear(startingDate);\r\n  const workingDaysThisYear =\r\n    daysOfAYear(startingDate.getFullYear()) - dayOfYear + 1;\r\n  const healtCareSubThisYear = Math.round(\r\n    healtCareSub *\r\n      (workingDaysThisYear / daysOfAYear(startingDate.getFullYear()))\r\n  );\r\n  return healtCareSubThisYear;\r\n};\r\n\r\nexport const calculateNumberOfVacationDaysNextPeriod = function (\r\n  startingDate,\r\n  numberOfPaidVacationDays\r\n) {\r\n  var numberOfVacationNextPeriod;\r\n  //the first day of the earning year is april 1st\r\n  let firstDayOfEarningYear = new Date(startingDate.getFullYear() - 1, 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfEarningYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  }\r\n  /*\r\n    Antalet betalda semesterdagar beräknas som: \r\n    Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n    (avrundas alltid uppåt till hela semesterdagar)\r\n  */\r\n  numberOfVacationNextPeriod = calculateNumberOfVacationDays(\r\n    startingDate,\r\n    firstDayOfEarningYear,\r\n    numberOfPaidVacationDays\r\n  );\r\n  return numberOfVacationNextPeriod;\r\n};\r\n\r\n/*\r\nHelper methods\r\n*/\r\n\r\nfunction isLeapYear(year) {\r\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n}\r\n\r\nconst daysOfAYear = function (year) {\r\n  return isLeapYear(year) ? 366 : 365;\r\n};\r\n\r\nconst calculateDayOfYear = function (startingDate) {\r\n  return Math.ceil(\r\n    (startingDate - new Date(startingDate.getFullYear(), 0, 1)) / 86400000\r\n  );\r\n};\r\n\r\nexport const exportedForTesting = {\r\n  daysOfAYear,\r\n  isLeapYear,\r\n  calculateDayOfYear,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Input,\r\n  Divider,\r\n  Grid,\r\n  Segment,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {\r\n  getYearOfFirstVacationPeriod,\r\n  calculateHealthCareSub,\r\n  calculateNumberOfVacationDaysNextPeriod,\r\n} from \"../logic/calc\";\r\n\r\nconst square = { width: 200, height: 200 };\r\n\r\nfunction Page() {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const [startingDate, setStartingDate] = useState(null);\r\n  const [numberOfPaidVacationDays, setNumberOfPaidVacationDays] = useState(25);\r\n  const [healtCareSubThisYear, setHealtCareSubThisYear] = useState(0);\r\n  const [vacationDaysNextPeriod, setVacationDaysNextPeriod] = useState(0);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const setHealthCareSub = (startingDate) => {\r\n    const healtCareSubThisYear = calculateHealthCareSub(startingDate);\r\n    setHealtCareSubThisYear(healtCareSubThisYear);\r\n  };\r\n\r\n  const setVactationDays = (startingDate) => {\r\n    const vacationDaysNextPeriod = calculateNumberOfVacationDaysNextPeriod(\r\n      startingDate,\r\n      numberOfPaidVacationDays\r\n    );\r\n    setVacationDaysNextPeriod(vacationDaysNextPeriod);\r\n  };\r\n\r\n  const onNumberOfPaidVacationDaysChange = (e) => {\r\n    setNumberOfPaidVacationDays(e.target.value);\r\n    if (startingDate) {\r\n      setVactationDays(startingDate);\r\n    }\r\n  };\r\n\r\n  const onDateChange = (startingDate) => {\r\n    if (!startingDate) {\r\n      return;\r\n    }\r\n    setStartingDate(startingDate);\r\n    setHealthCareSub(startingDate);\r\n    setVactationDays(startingDate);\r\n    setMessage(t(\"message.informationOnFuture\"));\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    if (message) {\r\n      return <p className=\"ui info message\">{message}</p>;\r\n    }\r\n  };\r\n\r\n  const renderVacationDaysText = () => {\r\n    if (startingDate) {\r\n      const startYearOfFirstVacationYear =\r\n        getYearOfFirstVacationPeriod(startingDate);\r\n      const endYearOfFirstVacationYear = startYearOfFirstVacationYear + 1;\r\n      return (\r\n        <Header as=\"h4\" textAlign=\"center\">\r\n          {t(\"vacation.sub-info\", {\r\n            startYear: startYearOfFirstVacationYear,\r\n            endYear: endYearOfFirstVacationYear,\r\n          })}\r\n        </Header>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderInfoBlobs = () => {\r\n    if (startingDate) {\r\n      return (\r\n        <Grid stackable columns={3}>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h3\" icon>\r\n                <Icon name=\"angle right\" />\r\n                {t(\"start-date\")}\r\n                <Header.Subheader>\r\n                  {moment(startingDate).format(\"YYYY-MM-DD\")}\r\n                </Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n            <Header as=\"h4\" textAlign=\"center\">\r\n              {t(\"start-date-sub-title\")}\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h3\" icon>\r\n                <Icon name=\"heart\" />\r\n                {t(\"wellness-allowance\")}\r\n                <Header.Subheader>{healtCareSubThisYear}</Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n            <Header as=\"h4\" textAlign=\"center\">\r\n              {t(\"wellness-allowance\")} {moment(startingDate).format(\"YYYY\")}\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment circular style={square}>\r\n              <Header as=\"h3\" icon>\r\n                <Icon name=\"sun\" />\r\n                {t(\"vacation.vacation-days\")}\r\n                <Header.Subheader>{vacationDaysNextPeriod}</Header.Subheader>\r\n              </Header>\r\n            </Segment>\r\n            {renderVacationDaysText()}\r\n          </Grid.Column>\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container text style={{ margin: 20 }}>\r\n      <div>\r\n        <button type=\"submit\" onClick={() => changeLanguage(\"sv\")}>\r\n          sv\r\n        </button>\r\n        <button type=\"submit\" onClick={() => changeLanguage(\"en\")}>\r\n          en\r\n        </button>\r\n      </div>\r\n      <Header as=\"h1\">{t(\"title\")}</Header>\r\n      <p>{t(\"sub-title\")}</p>\r\n      <Header as=\"h5\">{t(\"select-star-date\")}</Header>\r\n      <DatePicker onChange={onDateChange} value={startingDate} />\r\n      <Header as=\"h5\">{t(\"vacation.number-of-vacation-days\")}</Header>\r\n      <Input\r\n        label={{ basic: true, content: t(\"days\") }}\r\n        labelPosition=\"right\"\r\n        type=\"number\"\r\n        size=\"mini\"\r\n        value={numberOfPaidVacationDays}\r\n        name=\"quantity\"\r\n        min=\"25\"\r\n        placeholder={numberOfPaidVacationDays}\r\n        onChange={onNumberOfPaidVacationDaysChange}\r\n      />\r\n      <Divider />\r\n      {renderInfoBlobs()}\r\n      {renderMessage()}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","// loading component for suspense fallback\r\nconst Loader = () => (\r\n    <div className=\"App\">\r\n      <div>loading...</div>\r\n    </div>\r\n  );\r\n\r\nexport default Loader;","import React, { Suspense } from \"react\";\r\n\r\nimport Page from \"./Page\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<Loader />}>\r\n      <Page />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport translationEN from \"./lang/translationEN.json\";\r\nimport translationSE from \"./lang/translationSE.json\";\r\n\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  sv: {\r\n    translation: translationSE\r\n  },\r\n  \"sv-SE\": {\r\n    translation: translationSE\r\n  }\r\n};\r\n\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    resources,\r\n    debug: true,\r\n    lngWhitelist: ['se', 'en'],\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}