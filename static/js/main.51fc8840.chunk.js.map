{"version":3,"sources":["logic/calc.js","components/App.js","index.js"],"names":["daysOfAYear","year","isLeapYear","calculateHealthCareSub","startingDate","dayOfYear","Math","ceil","Date","getFullYear","calculateDayOfYear","workingDaysThisYear","round","calculateNumberOfVacationDaysNextPeriod","numberOfPaidVacationDays","numberOfVacationNextPeriod","firstDayOfEarningYear","getMonth","startingDateDayNumberOfEarningYear","numberOfDaysOfEarningYear","numberOfDaysWorkedThisEarningYear","numberOfVacationDays","calculateNumberOfVacationDays","App","props","state","healtCareSubThisYear","vacationDaysNextPeriod","vacationDaysThisPeriod","message","onDateChange","bind","onNumberOfPaidVacationDaysChange","this","setState","e","target","value","setVactationDays","setHealthCareSub","setMessage","className","yearOfFirstVacationYear","firstDayOfVacationYear","getYearOfFirstVacationPeriod","type","name","min","placeholder","onChange","style","paddingBottom","moment","format","renderVacationDaysText","renderMessage","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.51fc8840.chunk.js","sourcesContent":["const healtCareSub = 5000;\r\n\r\nexport const getYearOfFirstVacationPeriod = function (startingDate) {\r\n  let firstDayOfVacationYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfVacationYear = new Date(startingDate.getFullYear() + 1, 3, 1);\r\n  }\r\n  return firstDayOfVacationYear.getFullYear();\r\n};\r\n\r\nfunction isLeapYear(year) {\r\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n}\r\n\r\nconst daysOfAYear = function (year) {\r\n  return isLeapYear(year) ? 366 : 365;\r\n};\r\n\r\nconst calculateDayOfYear = function (startingDate) {\r\n  return Math.ceil(\r\n    (startingDate - new Date(startingDate.getFullYear(), 0, 1)) / 86400000\r\n  );\r\n};\r\n\r\n/*\r\nAntalet betalda semesterdagar beräknas som: \r\nAntalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n(avrundas alltid uppåt till hela semesterdagar)\r\n*/\r\nexport const calculateNumberOfVacationDays = function (\r\n  startingDate,\r\n  firstDayOfEarningYear,\r\n  numberOfPaidVacationDays\r\n) {\r\n  const startingDateDayNumberOfEarningYear = Math.ceil(\r\n    (startingDate - firstDayOfEarningYear) / 86400000\r\n  );\r\n  const numberOfDaysOfEarningYear = daysOfAYear(\r\n    firstDayOfEarningYear.getFullYear() + 1\r\n  );\r\n  const numberOfDaysWorkedThisEarningYear =\r\n    numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear;\r\n  const numberOfVacationDays = Math.ceil(\r\n    (numberOfDaysWorkedThisEarningYear * numberOfPaidVacationDays) /\r\n      numberOfDaysOfEarningYear\r\n  );\r\n  if (numberOfVacationDays <= 0) {\r\n    return 0;\r\n  }\r\n  return numberOfVacationDays;\r\n};\r\n\r\nexport const calculateHealthCareSub = function (startingDate) {\r\n  const dayOfYear = calculateDayOfYear(startingDate);\r\n  const workingDaysThisYear = daysOfAYear(startingDate) - dayOfYear;\r\n  const healtCareSubThisYear = Math.round(\r\n    healtCareSub * (workingDaysThisYear / daysOfAYear(startingDate))\r\n  );\r\n  return healtCareSubThisYear;\r\n};\r\n\r\nexport const calculateNumberOfVacationDaysNextPeriod = function (\r\n  startingDate,\r\n  numberOfPaidVacationDays\r\n) {\r\n  var numberOfVacationNextPeriod;\r\n  //the first day of the earning year is april 1st\r\n  let firstDayOfEarningYear = new Date(startingDate.getFullYear() - 1, 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfEarningYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  }\r\n  /*\r\n    Antalet betalda semesterdagar beräknas som: \r\n    Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n    (avrundas alltid uppåt till hela semesterdagar)\r\n  */\r\n  numberOfVacationNextPeriod = calculateNumberOfVacationDays(\r\n    startingDate,\r\n    firstDayOfEarningYear,\r\n    numberOfPaidVacationDays\r\n  );\r\n  return numberOfVacationNextPeriod;\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getYearOfFirstVacationPeriod,\r\n  calculateHealthCareSub,\r\n  calculateNumberOfVacationDaysNextPeriod,\r\n} from \"../logic/calc\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startingDate: null,\r\n      numberOfPaidVacationDays: 25,\r\n      healtCareSubThisYear: 0,\r\n      vacationDaysNextPeriod: 0,\r\n      vacationDaysThisPeriod: 0,\r\n      message: null,\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n    this.onNumberOfPaidVacationDaysChange =\r\n      this.onNumberOfPaidVacationDaysChange.bind(this);\r\n  }\r\n\r\n  setHealthCareSub(startingDate) {\r\n    this.setState({\r\n      healtCareSubThisYear: calculateHealthCareSub(startingDate),\r\n    });\r\n  }\r\n\r\n  setVactationDays(startingDate) {\r\n    this.setState({\r\n      vacationDaysNextPeriod: calculateNumberOfVacationDaysNextPeriod(\r\n        startingDate,\r\n        this.state.numberOfPaidVacationDays\r\n      ),\r\n    });\r\n  }\r\n\r\n  setMessage(message) {\r\n    this.setState({\r\n      message: message,\r\n    });\r\n  }\r\n\r\n  onNumberOfPaidVacationDaysChange(e) {\r\n    this.setState({\r\n      numberOfPaidVacationDays: e.target.value,\r\n    });\r\n    if(this.state.startingDate){\r\n      this.setVactationDays(this.state.startingDate);\r\n    }\r\n  }\r\n\r\n  onDateChange(startingDate) {\r\n    if (!startingDate) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      startingDate: startingDate,\r\n    });\r\n    this.setHealthCareSub(startingDate);\r\n    this.setVactationDays(startingDate);\r\n    this.setMessage(\r\n      `Framtida år / perioder kommer att vara berättigade fullt bidrag och fullt antal semesterdagar.`\r\n    );\r\n  }\r\n\r\n  renderMessage() {\r\n    if (this.state.message) {\r\n      return <p className=\"ui info message\">{this.state.message}</p>;\r\n    }\r\n  }\r\n\r\n  renderVacationDaysText() {\r\n    if (this.state.startingDate) {\r\n      const yearOfFirstVacationYear = getYearOfFirstVacationPeriod(\r\n        this.state.startingDate\r\n      );\r\n      return (\r\n        <div>\r\n          Intjänade semesterdagar period 1/4/{yearOfFirstVacationYear} - 31/3/\r\n          {yearOfFirstVacationYear + 1}: {this.state.vacationDaysNextPeriod}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <h1 className=\"ui header\">Friskvårdsbidragsuträknare</h1>\r\n        <div className=\"sub header\">\r\n          Applikationen räknar ut hur mycket semester du hinner jobba in till\r\n          nästa semesterår, samt hur mycket Friskvårdsbidrag du har rätt till\r\n          under kalenderåret du blev anställd.\r\n        </div>\r\n        <h5 className=\"ui header\">Antal semesterdagar</h5>\r\n        <div className=\"ui right labeled input\">\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.numberOfPaidVacationDays}\r\n            name=\"quantity\" min=\"25\"\r\n            placeholder={this.state.numberOfPaidVacationDays}\r\n            onChange={this.onNumberOfPaidVacationDaysChange}\r\n          />\r\n          <div className=\"ui basic label\">Dagar</div>\r\n        </div>\r\n\r\n        <h5 className=\"ui header\">Välj startdatum</h5>\r\n        <div style={{ paddingBottom: \"30px\" }}>\r\n          <DatePicker\r\n            onChange={this.onDateChange}\r\n            value={this.state.startingDate}\r\n          />\r\n        </div>\r\n        <div>\r\n          Startdatum:{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY-MM-DD\")\r\n            : \"\"}\r\n        </div>\r\n        <div>\r\n          Friskvårdsbidrag{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY\")\r\n            : \"\"}\r\n          : {this.state.healtCareSubThisYear}\r\n        </div>\r\n        {this.renderVacationDaysText()}\r\n        {this.renderMessage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector('#root'));"],"sourceRoot":""}