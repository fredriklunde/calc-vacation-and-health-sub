{"version":3,"sources":["components/App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startDate","dayOfYear","healtCareSubThisYear","message","onDateChange","bind","assertThisInitialized","year","isLeapYear","date","Math","ceil","Date","getFullYear","calculateDayOfYear","setState","workingDaysThisYear","daysOfAYear","round","calculateHealthCareSub","react_default","a","createElement","toDateString","className","entry_default","onChange","value","renderStartDate","renderMessage","React","Component","ReactDOM","render","components_App","document","querySelector"],"mappings":"yOAgGeA,cA1Fb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAW,KACXC,UAAW,KACXC,qBAAsB,EACtBC,QAAS,MAEXX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KARHA,0EAWRe,GACR,OAAOA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,GAAKA,EAAO,IAAM,sCAGpDA,GACV,OAAOZ,KAAKa,WAAWD,GAAQ,IAAM,+CAGpBE,GACjB,OAAOC,KAAKC,MAAMF,EAAO,IAAIG,KAAKH,EAAKI,cAAc,EAAE,IAAM,sDAGxCJ,GACrB,IAAMR,EAAYN,KAAKmB,mBAAmBL,GAC1Cd,KAAKoB,SAAS,CAACd,UAAWA,IAC1B,IAAMe,EAAsBrB,KAAKsB,YAAYR,GAAQR,EACrDN,KAAKoB,SAAS,CACZb,qBAAsBQ,KAAKQ,MAAsBF,EAAsBrB,KAAKsB,YAAYR,GA/BzE,4CAmCNA,GAIX,GAHAd,KAAKoB,SAAS,CACZf,UAAWS,IAEVA,EAAK,CACN,GAAGA,EAAKI,eAAgB,IAAID,MAAOC,cAKjC,YAJAlB,KAAKoB,SAAS,CACZb,qBAAsB,IACtBC,QAAS,4FAIbR,KAAKoB,SAAS,CACZZ,QAAS,OAEXR,KAAKwB,uBAAuBV,8CAK9B,GAAGd,KAAKI,MAAMC,UACZ,OACEoB,EAAAC,EAAAC,cAAA,0BACe3B,KAAKI,MAAMC,UAAUuB,wDAOxC,GAAG5B,KAAKI,MAAMI,QACZ,OACEiB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBACX7B,KAAKI,MAAMI,0CAOd,OACIiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,+HACAF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,SAAU/B,KAAKS,aACfuB,MAAOhC,KAAKI,MAAMC,YAEnBL,KAAKiC,kBACNR,EAAAC,EAAAC,cAAA,kCACqB3B,KAAKI,MAAMG,sBAE/BP,KAAKkC,wBArFFC,IAAMC,WCDxBC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MACZC,SAASC,cAAc","file":"static/js/main.8618dfa4.chunk.js","sourcesContent":["import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst healtCareSub = 5000;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: null,\r\n      dayOfYear: null,\r\n      healtCareSubThisYear: 0,\r\n      message: null\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n  }\r\n\r\n  isLeapYear(year) {\r\n     return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n  }\r\n\r\n  daysOfAYear(year) { \r\n    return this.isLeapYear(year) ? 366 : 365;\r\n  }\r\n\r\n  calculateDayOfYear(date){\r\n    return(Math.ceil((date - new Date(date.getFullYear(),0,1)) / 86400000))\r\n  }\r\n\r\n  calculateHealthCareSub(date){\r\n    const dayOfYear = this.calculateDayOfYear(date);\r\n    this.setState({dayOfYear: dayOfYear})\r\n    const workingDaysThisYear = this.daysOfAYear(date) - dayOfYear;\r\n    this.setState({\r\n      healtCareSubThisYear: Math.round(healtCareSub * (workingDaysThisYear / this.daysOfAYear(date)))\r\n    }) \r\n  }\r\n \r\n  onDateChange(date) {\r\n    this.setState({\r\n      startDate: date,\r\n    });\r\n    if(date){\r\n      if(date.getFullYear() < new Date().getFullYear()){\r\n        this.setState({\r\n          healtCareSubThisYear: 5000,\r\n          message: 'Eftersom du började förra året så har du fullt friskvårdsbidrag i år.'\r\n        }) \r\n        return\r\n      }\r\n      this.setState({\r\n        message: null\r\n      })\r\n      this.calculateHealthCareSub(date);\r\n    }\r\n  }\r\n\r\n  renderStartDate(){\r\n    if(this.state.startDate){\r\n      return (\r\n        <div>\r\n          Startdatum: {this.state.startDate.toDateString()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderMessage(){\r\n    if(this.state.message){\r\n      return(\r\n        <h5 className=\"ui info message\">\r\n          {this.state.message}\r\n        </h5>\r\n      )\r\n    }\r\n  }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"ui container\">\r\n              <h1>Friskvårdsbidragsuträknare</h1>\r\n              <h3>Välj ett startdatum för att räkna ut hur mycket Friskvårdsbidrag du är berättigad till i år.</h3>\r\n              <DatePicker\r\n                onChange={this.onDateChange}\r\n                value={this.state.startDate}\r\n              />\r\n              {this.renderStartDate()}\r\n              <h5>\r\n                Friskvårdsbidrag: {this.state.healtCareSubThisYear}\r\n              </h5>\r\n              {this.renderMessage()}\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector('#root'));"],"sourceRoot":""}