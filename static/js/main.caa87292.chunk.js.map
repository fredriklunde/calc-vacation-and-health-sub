{"version":3,"sources":["logic/calc.js","components/App.js","index.js"],"names":["daysOfAYear","year","isLeapYear","calculateHealthCareSub","startingDate","dayOfYear","Math","ceil","Date","getFullYear","calculateDayOfYear","workingDaysThisYear","round","calculateNumberOfVacationDaysNextPeriod","numberOfVacationDays","firstDayOfEarningYear","getMonth","startingDateDayNumberOfEarningYear","numberOfDaysOfEarningYear","numberOfDaysWorkedThisEarningYear","calculateNumberOfVacationDays","App","props","state","healtCareSubThisYear","vacationDaysNextPeriod","vacationDaysThisPeriod","message","onDateChange","bind","this","setState","setHealthCareSub","setVactationDays","className","yearOfFirstVacationYear","firstDayOfVacationYear","getYearOfFirstVacationPeriod","style","paddingTop","paddingBottom","onChange","value","moment","format","renderVacationDaysText","renderMessage","React","Component","ReactDOM","render","document","querySelector"],"mappings":"yQAeA,IAAMA,EAAc,SAAUC,GAC5B,OALF,SAAoBA,GAClB,OAAOA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,GAAKA,EAAO,IAAM,EAItDC,CAAWD,GAAQ,IAAM,KAkCrBE,EAAyB,SAAUC,GAC9C,IAAMC,EAhCmB,SAAUD,GACnC,OAAOE,KAAKC,MAAMH,EAAe,IAAII,KAAKJ,EAAaK,cAAe,EAAG,IAAM,OA+B7DC,CAAmBN,GAC/BO,EAAsBX,EAAYI,GAAgBC,EAIxD,OAH6BC,KAAKM,MAChBD,EAAsBX,EAAYI,GArDjC,MA0DRS,EAA0C,SAAUT,GAC/D,IAAIU,EAEAC,EAAwB,IAAIP,KAAKJ,EAAaK,cAAgB,EAAG,EAAG,GAaxE,OAZIL,EAAaY,YAAc,IAC7BD,EAAwB,IAAIP,KAAKJ,EAAaK,cAAe,EAAG,IAOlEK,EA3C2C,SAC3CV,EACAW,GAEA,IAAME,EAAqCX,KAAKC,MAC7CH,EAAeW,GAAyB,OAErCG,EAA4BlB,EAChCe,EAAsBN,cAAgB,GAElCU,EACJD,EAA4BD,EACxBH,EAAuBR,KAAKC,KAxCI,GAyCnCY,EACCD,GAEJ,OAAIJ,GAAwB,EACnB,EAEFA,EAwBgBM,CACrBhB,EACAW,GAEKD,G,OC0BMO,E,kDA3Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXnB,aAAc,KACdoB,qBAAsB,EACtBC,uBAAwB,EACxBC,uBAAwB,EACxBC,QAAS,MAEX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBATH,E,oDAYnB,SAAiBzB,GACf0B,KAAKC,SAAS,CACZP,qBAAsBrB,EAAuBC,O,8BAIjD,SAAiBA,GACf0B,KAAKC,SAAS,CACZN,uBACEZ,EAAwCT,O,0BAI9C,SAAaA,GACNA,IAGL0B,KAAKC,SAAS,CACZ3B,aAAcA,IAEhB0B,KAAKE,iBAAiB5B,GACtB0B,KAAKG,iBAAiB7B,M,2BAGxB,WACE,GAAI0B,KAAKP,MAAMI,QACb,OAAO,oBAAIO,UAAU,kBAAd,SAAiCJ,KAAKP,MAAMI,Y,oCAIvD,WACE,GAAIG,KAAKP,MAAMnB,aAAc,CAC3B,IAAM+B,EDnDgC,SAAS/B,GACnD,IAAIgC,EAAyB,IAAI5B,KAAKJ,EAAaK,cAAe,EAAG,GAIrE,OAHIL,EAAaY,YAAc,IAC7BoB,EAAyB,IAAI5B,KAAKJ,EAAaK,cAAgB,EAAG,EAAG,IAEhE2B,EAAuB3B,cC8CM4B,CAC9BP,KAAKP,MAAMnB,cAEb,OACE,yEACsC+B,EADtC,WAEGA,EAA0B,EAF7B,KAEkCL,KAAKP,MAAME,6B,oBAMnD,WACE,OACE,sBAAKS,UAAU,eAAf,UACE,oBAAIA,UAAU,YAAd,8CACA,qBAAKA,UAAU,aAAf,8MAKA,qBAAKI,MAAO,CAAEC,WAAY,OAAQC,cAAe,QAAjD,SACE,cAAC,IAAD,CACEC,SAAUX,KAAKF,aACfc,MAAOZ,KAAKP,MAAMnB,iBAGtB,iDACiB,IACd0B,KAAKP,MAAMnB,aACRuC,IAAOb,KAAKP,MAAMnB,cAAcwC,OAAO,cACvC,MAEN,sDACmB,IAChBd,KAAKP,MAAMnB,aACRuC,IAAOb,KAAKP,MAAMnB,cAAcwC,OAAO,QACvC,GAJN,KAKKd,KAAKP,MAAMC,wBAEfM,KAAKe,yBACLf,KAAKgB,uB,GAtFIC,IAAMC,WCLxBC,IAASC,OAAO,cAAC,EAAD,IACZC,SAASC,cAAc,Y","file":"static/js/main.caa87292.chunk.js","sourcesContent":["const defaultNumberOfPaidVacationDays = 25;\r\nconst healtCareSub = 5000;\r\n\r\nexport const getYearOfFirstVacationPeriod = function(startingDate) {\r\n  let firstDayOfVacationYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfVacationYear = new Date(startingDate.getFullYear() + 1, 3, 1);\r\n  }\r\n  return firstDayOfVacationYear.getFullYear();\r\n}\r\n\r\nfunction isLeapYear(year) {\r\n  return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);\r\n}\r\n\r\nconst daysOfAYear = function (year) {\r\n  return isLeapYear(year) ? 366 : 365;\r\n};\r\n\r\nconst calculateDayOfYear = function (startingDate) {\r\n  return Math.ceil((startingDate - new Date(startingDate.getFullYear(), 0, 1)) / 86400000);\r\n};\r\n\r\n/*\r\nAntalet betalda semesterdagar beräknas som: \r\nAntalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n(avrundas alltid uppåt till hela semesterdagar)\r\n*/\r\nexport const calculateNumberOfVacationDays = function (\r\n  startingDate,\r\n  firstDayOfEarningYear\r\n) {\r\n  const startingDateDayNumberOfEarningYear = Math.ceil(\r\n    (startingDate - firstDayOfEarningYear) / 86400000\r\n  );\r\n  const numberOfDaysOfEarningYear = daysOfAYear(\r\n    firstDayOfEarningYear.getFullYear() + 1\r\n  );\r\n  const numberOfDaysWorkedThisEarningYear =\r\n    numberOfDaysOfEarningYear - startingDateDayNumberOfEarningYear;\r\n  const numberOfVacationDays = Math.ceil(\r\n    (numberOfDaysWorkedThisEarningYear * defaultNumberOfPaidVacationDays) /\r\n      numberOfDaysOfEarningYear\r\n  );\r\n  if (numberOfVacationDays <= 0) {\r\n    return 0;\r\n  }\r\n  return numberOfVacationDays;\r\n};\r\n\r\nexport const calculateHealthCareSub = function (startingDate) {\r\n  const dayOfYear = calculateDayOfYear(startingDate);\r\n  const workingDaysThisYear = daysOfAYear(startingDate) - dayOfYear;\r\n  const healtCareSubThisYear = Math.round(\r\n    healtCareSub * (workingDaysThisYear / daysOfAYear(startingDate))\r\n  );\r\n  return healtCareSubThisYear;\r\n};\r\n\r\nexport const calculateNumberOfVacationDaysNextPeriod = function (startingDate) {\r\n  var numberOfVacationDays = defaultNumberOfPaidVacationDays;\r\n  //the first day of the earning year is april 1st\r\n  let firstDayOfEarningYear = new Date(startingDate.getFullYear() - 1, 3, 1);\r\n  if (startingDate.getMonth() >= 3) {\r\n    firstDayOfEarningYear = new Date(startingDate.getFullYear(), 3, 1);\r\n  }\r\n  /*\r\n    Antalet betalda semesterdagar beräknas som: \r\n    Antalet semesterdagar per år * antalet anställningsdagar aktuellt intjänandeår/ antal dagar på året \r\n    (avrundas alltid uppåt till hela semesterdagar)\r\n  */\r\n  numberOfVacationDays = calculateNumberOfVacationDays(\r\n    startingDate,\r\n    firstDayOfEarningYear\r\n  );\r\n  return numberOfVacationDays;\r\n};\r\n","import React from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getYearOfFirstVacationPeriod,\r\n  calculateHealthCareSub,\r\n  calculateNumberOfVacationDaysNextPeriod,\r\n} from \"../logic/calc\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startingDate: null,\r\n      healtCareSubThisYear: 0,\r\n      vacationDaysNextPeriod: 0,\r\n      vacationDaysThisPeriod: 0,\r\n      message: null,\r\n    };\r\n    this.onDateChange = this.onDateChange.bind(this);\r\n  }\r\n\r\n  setHealthCareSub(startingDate) {\r\n    this.setState({\r\n      healtCareSubThisYear: calculateHealthCareSub(startingDate),\r\n    });\r\n  }\r\n\r\n  setVactationDays(startingDate) {\r\n    this.setState({\r\n      vacationDaysNextPeriod:\r\n        calculateNumberOfVacationDaysNextPeriod(startingDate),\r\n    });\r\n  }\r\n\r\n  onDateChange(startingDate) {\r\n    if (!startingDate) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      startingDate: startingDate,\r\n    });\r\n    this.setHealthCareSub(startingDate);\r\n    this.setVactationDays(startingDate);\r\n  }\r\n\r\n  renderMessage() {\r\n    if (this.state.message) {\r\n      return <h5 className=\"ui info message\">{this.state.message}</h5>;\r\n    }\r\n  }\r\n\r\n  renderVacationDaysText() {\r\n    if (this.state.startingDate) {\r\n      const yearOfFirstVacationYear = getYearOfFirstVacationPeriod(\r\n        this.state.startingDate\r\n      );\r\n      return (\r\n        <div>\r\n          Intjänade semesterdagar period 1/4/{yearOfFirstVacationYear} - 31/3/\r\n          {yearOfFirstVacationYear + 1}: {this.state.vacationDaysNextPeriod}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <h1 className=\"ui header\">Friskvårdsbidragsuträknare</h1>\r\n        <div className=\"sub header\">\r\n          Applikationen räknar ut hur mycket semeser du hinner jobba in till\r\n          nästa semesterår, samt hur mycket Friskvårdsbidrag du har rätt till\r\n          under kalenderåret du blev anställd.\r\n        </div>\r\n        <div style={{ paddingTop: \"30px\", paddingBottom: \"30px\" }}>\r\n          <DatePicker\r\n            onChange={this.onDateChange}\r\n            value={this.state.startingDate}\r\n          />\r\n        </div>\r\n        <div>\r\n          Starting Date:{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY-MM-DD\")\r\n            : \"\"}\r\n        </div>\r\n        <div>\r\n          Friskvårdsbidrag{\" \"}\r\n          {this.state.startingDate\r\n            ? moment(this.state.startingDate).format(\"YYYY\")\r\n            : \"\"}\r\n          : {this.state.healtCareSubThisYear}\r\n        </div>\r\n        {this.renderVacationDaysText()}\r\n        {this.renderMessage()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />,\r\n    document.querySelector('#root'));"],"sourceRoot":""}